<launch>

  <arg name="IMAGE_RESIZE" default="false" />
  <arg name="USE_TORCH" default="true" />  <!-- true -> torch; false -> chainer -->

  <group if="$(arg IMAGE_RESIZE)">
    <node name="image_resizer"
          pkg="resized_image_transport" type="image_resizer"
          respawn="true">
      <remap from="~input/image" to="/kinect_head_localhost/rgb/image_rect_color" />
      <remap from="~input/camera_info" to="/kinect_head_c2/rgb/camera_info" />
      <remap from="~output/image" to="/image_resizer/output/kinect_head_localhost/rgb/image_rect_color" />
      <remap from="~output/camera_info" to="/image_resizer/output/kinect_head_c2/rgb/camera_info" />
      <rosparam>
        resize_scale_x: 0.25
        resize_scale_y: 0.25
      </rosparam>
    </node>
  </group>

  <!-- <arg name="INPUT_IMAGE" value="/image_resizer/output/kinect_head_localhost/rgb/image_rect_color" /> -->
  <arg name="INPUT_IMAGE" value="/kinect_head_localhost/rgb/image_rect_color" />

  <!-- <arg name="INPUT_CLOUD" value="/kinect_head_c2/depth_registered/points" /> -->
  <arg name="INPUT_CLOUD" value="/add_color_organized/output" />

  <!-- visualization -->
  <node name="label_image_decomposer"
        pkg="jsk_perception" type="label_image_decomposer.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />
    <remap from="~input/label" to="fcn_object_segmentation/output" />
    <remap from="~label_names" to="label_names" />
    <rosparam>
      queue_size: 100
    </rosparam>
  </node>

  <arg name="NODELET_MANAGER" value="sample_manager" />

  <node name="$(arg NODELET_MANAGER)"
        pkg="nodelet" type="nodelet" args="manager"
        respawn="true" >
    <param name="num_worker_threads" value="8" />
  </node>

  <param name="label_to_mask/label_value" value="37" />

  <node name="multi_plane_estimate" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/OrganizedMultiPlaneSegmentation $(arg NODELET_MANAGER)"
        output="screen">
    <remap from="~input" to="$(arg INPUT_CLOUD)" />
    <rosparam>
      max_curvature: 0.01
      estimate_normal: true
    </rosparam>
  </node>

  <node name="cluster_indices_decomposer_table"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg NODELET_MANAGER)"
        respawn="true" >
    <remap from="~input" to="$(arg INPUT_CLOUD)" />
    <remap from="~target" to="multi_plane_estimate/output" />
    <rosparam subst_value="true">
      approximate_sync: true
      queue_size: 1000
      align_boxes: true
      align_boxes_with_plane: false
      target_frame_id: base_link
    </rosparam>
  </node>

  <node name="extract_indices_table"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg NODELET_MANAGER)"
        respawn="true" >
    <remap from="~input" to="$(arg INPUT_CLOUD)" />
    <remap from="~indices" to="cluster_indices_decomposer_table/negative_indices" />
    <rosparam>
      approximate_sync: true
      queue_size: 100
      keep_organized: true
    </rosparam>
  </node>

  <node name="invert_table_mask"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ApplyMaskImage $(arg NODELET_MANAGER)"
        respawn="true" >
    <remap from="~input" to="cluster_indices_decomposer_table/mask" />
    <remap from="~input/mask" to="cluster_indices_decomposer_table/mask" />
    <rosparam>
      negative: true
    </rosparam>
  </node>

  <arg name="INPUT_MASK_IMAGE" value="invert_table_mask/output/mask" />
  <arg name="INPUT_CLOUD" value="extract_indices_table/output" />
  <arg name="GPU" value="0" />  <!-- cpu=-1, gpu=0 -->

  <group if="$(arg USE_TORCH)" >
    <include file="$(find pr2_picking)/launch/object_segmentation_3d.launch">
      <arg name="NODELET_MANAGER" value="$(arg NODELET_MANAGER)" />
      <arg name="INPUT_IMAGE" value="$(arg INPUT_IMAGE)" />
      <arg name="INPUT_MASK_IMAGE" value="$(arg INPUT_MASK_IMAGE)" />
      <arg name="INPUT_CLOUD" value="$(arg INPUT_CLOUD)" />
      <arg name="FIXED_FRAME" value="base_link" />
      <arg name="BACKEND" value="torch" />
      <arg name="GPU" value="0" />
      <arg name="MODEL_NAME" value="fcn32s_bilinear" />
      <arg name="MODEL_FILE" value="$(find jsk_arc2017_common)/data/models/fcn32s_arc2017_dataset_v1_20170417.pth" />
      <arg name="LABEL_YAML" value="$(find jsk_arc2017_common)/config/label_names.yaml" />
    </include>
  </group>
  <group unless="$(arg USE_TORCH)" >
    <include file="$(find pr2_picking)/launch/object_segmentation_3d.launch">
      <arg name="NODELET_MANAGER" value="$(arg NODELET_MANAGER)" />
      <arg name="INPUT_IMAGE" value="$(arg INPUT_IMAGE)" />
      <arg name="INPUT_MASK_IMAGE" value="$(arg INPUT_MASK_IMAGE)" />
      <arg name="INPUT_CLOUD" value="$(arg INPUT_CLOUD)" />
      <arg name="FIXED_FRAME" value="base_link" />
      <arg name="BACKEND" value="chainer" />
      <arg name="GPU" value="0" />
      <arg name="MODEL_NAME" value="fcn32s" />
      <arg name="MODEL_FILE" value="$(find jsk_apc2016_common)/trained_data/fcn32s_v2_148000.chainermodel" />
      <arg name="LABEL_YAML" value="$(find jsk_apc2016_common)/config/label_names.yaml" />
    </include>
  </group>


</launch>
